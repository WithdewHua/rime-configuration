# Rime schema
# encoding: utf-8
# moran: https://github.com/ksqsf/rime-moran
# 根据魔然方案进行修改
# 修改：WithdewHua <i@10101.io>

schema:
  schema_id: moran
  name: 魔然
  version: "20240617"
  author:
    - 自然碼發明人：周志農
    - 方案製作：ksqsf
  description: |
    爲傳承字設計的自然碼及輔助碼智能整句輸入方案。
  dependencies:
    - moran_fixed
    - moran_sentence
    - melt_eng               # 英文输入，作为次翻译器挂载到拼音方案
    - radical_pinyin         # 部件拆字，作为反查挂载到拼音方案

switches:
  - name: ascii_mode
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: traditionalization
    states: [ 汉字, 漢字 ]
  - name: ascii_punct
    states: [ 。，, ．， ]
  - name: extended_charset
    states: [ 通用, 增廣 ]
  - name: inflexible
    states: [ 動詞, 固詞 ] # 「固詞」表示「固頂詞」
    # 默認情況下，輸入 4 碼時，會禁止碼表輸出（「動詞」模式）。
    # 這是因爲碼表最大碼長爲 4，可能會產生較低頻的多字詞，覆蓋過用戶自造的常用詞語。
    # 當固詞模式啓動後，輸入 4 碼時會優先輸出碼表中的二字詞，這些輸出帶有「⚡️」標記。
  - name: emoji
    states: [ 🈚, 🈶 ]
  - name: chaifen
    states: [ 不拆, 扌斥 ]
  - name: pinyinhint
    states: [ 🔇, 🔊 ]
  - name: unicode_comment
    states: [ U關, U開 ]
  - options: [ std_opencc,  std_tw, std_hk, std_dzing ]
    reset: 0
    states: [ 通, 臺, 港, 寍 ]

engine:
  processors:
    - key_binder
    - lua_processor@*moran_semicolon_processor
    - lua_processor@*select_character                        # 以词定字
    - ascii_composer
    - recognizer
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@radical_lookup
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - script_translator
    - table_translator@custom_phrase                         # 自定义短语 custom_phrase_double.txt
    - table_translator@melt_eng                              # 英文输入
    - table_translator@radical_lookup                        # 拆字反查
    - lua_translator@*moran_express_translator@with_reorder  # 翻譯器
    - lua_translator@*date_translator                        # 时间、日期、星期
    - lua_translator@*unicode                                # Unicode
    - lua_translator@*number_translator                      # 数字大写
    - history_translator@quick_repeat
  filters:
    - reverse_lookup_filter@radical_reverse_lookup           # 拆字滤镜
    - lua_filter@*moran_charset_filter
    - lua_filter@*moran_reorder_filter
    - lua_filter@*moran_quick_code_hint
    - lua_filter@*moran_aux_hint
    - lua_filter@*reduce_english_filter                      # 降低部分英语单词在候选项的位置
    - lua_filter@*is_in_user_dict                            # 判断是否为用户词
    - lua_filter@*autocap_filter                             # 英文大写转换
    - lua_filter@*insert_space_between_words                 # 英文词前后插入空格
    - simplifier@emoji
    - simplifier@chaifen
    - simplifier@pinyinhint
    - simplifier@std_hk
    - simplifier@std_tw
    - simplifier@std_dzing
    - simplifier@traditionalize                              # 简繁转换
    - uniquifier                                             # 去重

speller:
  alphabet: abcdefghijklmnopqrstuvwxyz/;
  delimiter: " '"
  auto_select: true
  auto_select_pattern: ^;(\w+|;)
  algebra:
    __patch:
      - moran:/algebra/user_force_top?
      - moran:/algebra/user_sentence_top?
      - moran:/algebra/generate_code
      - moran:/algebra/user_sentence_bottom?
      - moran:/algebra/user_force_bottom?

punctuator:
  import_preset: symbols                                     # 导入 symbols

key_binder:
  import_preset: default
  custom_bindings:
    __append:
      # 在這裏添加只在本方案中生效的按鍵綁定
  bindings:
    __patch:
      - :/key_binder/custom_bindings?
      - moran:/key_bindings/moran_capital_for_last_syllable
      - moran:/key_bindings/moran_tab
      - moran:/key_bindings/moran_switches

# 处理符合特定规则的输入码，如网址、反查
recognizer:
  # 从 default.yaml 继承通用的  
  import_preset: default  
  patterns:  # 再增加方案专有的：
    punct: "^V([0-9]|10|[A-Za-z]+)$"                         # 响应 symbols.yaml 的 symbols，大写 V 触发
    radical_lookup: "^L[a-z]+$"                              # 响应反查
    unicode: "^U[a-f0-9]+"                                   # 响应 Unicode
    number: "^R[0-9]+[.]?[0-9]*"                             # 响应 number_translator


# ------------
# translators
# ------------
# 整句輸入模式設置，在 top_translator 中被調用
translator:    
  dictionary: rime_cn
  prism: moran
  initial_quality: 5
  max_homophones: 7
  spelling_hints: 3
  contextual_suggestions: true
  preedit_format:
    - xform/([a-z][a-z][a-z][a-z])o/$1°/

# 固頂輸入模式設置，在 top_translator 中被調用
fixed:         
  dictionary: moran_fixed_simp
  initial_quality: 100
  enable_completion: false
  enable_sentence: false
  enable_user_dict: false
  enable_encoder: false
  encode_commit_history: true

# 次翻译器，英文
melt_eng:
  dictionary: melt_eng                                       # 挂载词库 melt_eng.dict.yaml
  enable_sentence: false                                     # 禁止造句
  enable_user_dict: false                                    # 禁用用户词典
  initial_quality: 1.1                                       # 初始权重
  comment_format:                                            # 自定义提示码
    - xform/.*//                                             # 清空提示码

# 自定義短語
custom_phrase: 
  dictionary: ""
  user_dict: custom_phrase_double
  db_class: stabledb
  enable_completion: false                                   # 补全提示
  enable_sentence: false                                     # 禁止造句
  initial_quality: 1000                                      # custom_phrase 的权重应该其他 dict 大

# Lua 配置: 日期、时间、星期、ISO 8601、时间戳的触发关键字
date_translator:
  date: date            # 日期： 2022-11-29
  time: time            # 时间： 18:13
  week: week            # 星期： 星期二
  datetime: datetime    # ISO 8601： 2022-11-29T18:13:11+08:00
  timestamp: timestamp  # 时间戳： 1669716794


# Lua 配置: 降低部分英语单词在候选项的位置。
# 详细介绍 https://dvel.me/posts/make-rime-en-better/#短单词置顶的问题
# 正常情况： 输入 rug 得到 「1.rug 2.如果 …… 」
# 降低之后： 输入 rug 得到 「1.如果 2.rug …… 」
# 几种模式：
# all     降低脚本内置的单词（所有 3~4 位长度、前 2~3 位是完整拼音、最后一位是声母），words 作为自定义的额外补充
# custom  完全自定义，只降低 words 里的
# none    不降低任何单词，相当于没有启用这个 Lua
# （匹配的是编码，不是单词）
reduce_english_filter:
  mode: custom  # all | custom | none
  idx: 2        # 降低到第 idx 个位置
  # 自定义的单词列表，示例列表没有降低部分常用单词，如 and cat mail Mac but bad shit ……
  words: [
    aid, ann,
    bail, bait, bam, band, bans, bat, bay, bend, bent, benz, bib, bid, bien, biz, boc, bop, bos, bud, buf, bach, bench, bush,
    cab, cad, cain, cam, cans, cap, cas, cef, chad, chan, chap, chef, cher, chew, chic, chin, chip, chit, coup, cum, cunt, cur, couch,
    dab, dag, dal, dam, dent, dew, dial, diet, dim, din, dip, dis, dit, doug, dub, dug, dunn,
    fab, fax, fob, fog, foul, fur,
    gag, gail, gain, gal, gam, gaol, ged, gel, ger, guam, gus, gut,
    hail, ham, hank, hans, hat, hay, heil, heir, hem, hep, hud, hum, hung, hunk, hut, hush,
    jim, jug,
    kat,
    lab, lad, lag, laid, lam, laos, lap, lat, lax, lay, led, leg, lex, liam, lib, lid, lied, lien, lies, linn, lip, lit, liz, lob, lug, lund, lung, lux, lash, loch, lush,
    mag, maid, mann, mar, mat, med, mel, mend, mens, ment, mil, mins, mint, mob, moc, mop, mos, mot, mud, mug, mum, mesh,
    nap, nat, nay, neil, nib, nip, noun, nous, nun, nut, nail, nash,
    pac, paid, pail, pain, pair, pak, pal, pam, pans, pant, pap, par, pat, paw, pax, pens, pic, pier, pies, pins, pint, pit, pix, pod, pop, pos, pot, pour, pow, pub, pinch, pouch,
    rand, rant, rent, rep, res, ret, rex, rib, rid, rig, rim, rub, rug, rum, runc, runs, ranch,
    sac, sail, sal, sam, sans, sap, saw, sax, sew, sham, shaw, shin, sig, sin, sip, sis, suit, sung, suns, sup, sur, sus,
    tad, tail, taj, tar, tax, tec, ted, tel, ter, tex, tic, tied, tier, ties, tim, tin, tit, tour, tout, tum,
    wag, wand, womens, wap, wax, weir, won,
    yan, yen,
    zach
  ]

# 部件拆字反查
radical_lookup:
  tag: radical_lookup
  dictionary: radical_pinyin
  enable_user_dict: false
  prefix: "L"  # 反查前缀（反查时前缀会消失影响打英文所以设定为两个字母，或可改成一个非字母符号），与 recognizer/patterns/radical_lookup 匹配
  tips: "  〔拆字〕"
  comment_format:
    - erase/^.*$//

# 快速重複上屏
quick_repeat:  
  input: ";d"
  size: 1
  initial_quality: 0

# ------------
# filters
# ------------
traditionalize:
  option_name: traditionalization
  opencc_config: s2t.json
  tips: none                                                 # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  exclude_types: [ radical_lookup ]                          # 不转换反查内容
  
# 部件拆字滤镜
radical_reverse_lookup:
  tags: [ radical_lookup ]
  # dictionary 为拼音标注来源。目前是显示本方案词库的注音，可去部件拆字方案下载更全的、带声调的、已编译好的词典
  # https://github.com/mirtlecn/rime-radical-pinyin?tab=readme-ov-file#%E5%8F%8D%E6%9F%A5%E5%B8%A6%E5%A3%B0%E8%B0%83%E6%B3%A8%E9%9F%B3
  dictionary: rime_ice
  # comment_format:     # 自定义 comment，例如在左右加上括号
  #  - xform/^/(/
  #  - xform/$/)/

chaifen:
  option_name: chaifen
  opencc_config: moran_chaifen.json
  tips: char
  show_in_comment: true
  comment_form:
    - "xform/-/ /"

pinyinhint:
  option_name: pinyinhint
  opencc_config: moran_pinyinhint.json
  tips: char
  show_in_comment: true

emoji:
  opencc_config: emoji.json
  option_name: emoji
  tips: none

std_hk:
  opencc_config: t2hk.json
  option_name: std_hk
  #tips: all

std_tw:
  opencc_config: t2tw.json
  option_name: std_tw
  #tips: all

std_dzing:
  opencc_config: moran_dzing.json
  option_name: std_dzing
  tips: all


# ------------
# moran custom
# ------------
moran:
  # 簡快碼提示符
  # 修改爲 "" 可取消提示符
  # 建議在熟悉簡碼後再取消
  quick_code_indicator: "⚡️"

  # 詞輔功能
  # 當輸入二字或三字詞時，允許詞末輸入 *一位* 輔助碼篩選詞語。
  # 例如輸入 lmjxz 得到「連接」，輸入 lmjxj 得到「鏈接」。
  # 但是與字輔輸入方法不同，詞輔在生效後 *不能* 在句末繼續輸入形成整
  # 句——這個功能僅用於「詞語篩選」。因此，這個功能僅適合習慣於以詞語
  # 爲單位輸入的用戶，因此默認是關閉的。
  #
  # 開啓後，詞輔篩選的詞語會帶有輔助碼提示，例如「鏈接」後會有「jf」，
  # 意思是輸入 j *或* f 都可以定位到這個詞，而不是說要同時輸入 jf 兩個碼
  # （相反，同時輸入 jf 兩碼後反而無法得到該選項）。
  enable_word_filter: false

  # 「出簡讓全」相關設置
  # 當一個字具有簡碼時，打其全碼（不論是 yyxx 還是 yyxxo）都會導致該
  # 字讓出首位，而被推遲到後位。
  ijrq:
    enable: true       # 是否啓用出簡讓全？
    #defer: 5          # 延遲多少位？若不設置该项，或值小於等於 0，則推遲到第二頁的首選
    show_hint: true    # 若讓全，則提示簡碼打法

  # 單字輔助碼提示
  # 注：會顯示出所有可能的輔助碼
  enable_aux_hint: false

  # 簡快碼提示（包括字和詞）
  # 例如 輸入 yy te er 英特爾 會提示「⚡yte」，即使用 yte 可以打出這個詞
  enable_quick_code_hint: false

  # 輸入四碼時，如果簡碼碼表中含有對應條目，則放置在第二選項。
  show_chars_anyway: false   # 是否輸出簡碼碼表單字，例：輸入 jwrg 時，次選爲「佳」
  show_words_anyway: true   # 是否輸出簡碼碼表詞語，例：輸入 lmsd 時，次選爲「兩面三刀」

# 默認啓用語言模型
__include: moran:/octagram/enable_for_sentence
# 若要禁用，可直接刪掉上面的 __include，或在 custom 文件中寫入：
# patch:
#   __include: moran:/octagram/disable
